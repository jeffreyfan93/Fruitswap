{"version":3,"sources":["webpack:///webpack/bootstrap 532138dcf1adee98bfce","webpack:///./lib/fruitswap.js","webpack:///./lib/game.js","webpack:///./lib/board.js","webpack:///./lib/swap_logic.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;;;;;;ACRD;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wCAAuC,gCAAgC;AACvE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,4EAA2E,WAAW;AACtF,MAAK;;AAEL;;AAEA;;AAEA;;;;;;;;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,UAAU;AAC7B;AACA,sBAAqB,UAAU;AAC/B;AACA;;AAEA,+BAA8B;AAC9B;AACA;AACA;;AAEA,0CAAyC,EAAE,EAAE,EAAE;AAC/C;AACA;AACA,yCAAwC,IAAI;;AAE5C,wCAAuC,EAAE,EAAE,EAAE;AAC7C;AACA;AACA,6BAA4B,EAAE,EAAE,EAAE;AAClC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBAAqB,wBAAwB;AAC7C;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;AACP,MAAK;;AAEL;;AAEA,oBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA4B,YAAY;AACxC;AACA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,QAAQ;AAC3B;;AAEA,sBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;;AAEA;AACA,sBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,2BAA2B;AAC9C;AACA;AACA,yBAAwB,kBAAkB;AAC1C,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,sBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA,YAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1MA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 532138dcf1adee98bfce","const Game = require('./game');\nconst Board = require('./board');\nconst allowDrop = require('./swap_logic');\nconst drag = require('./swap_logic');\nconst drop = require('./swap_logic');\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  window.Game = new Game();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/fruitswap.js\n// module id = 0\n// module chunks = 0","const Board = require('./board');\n\n\nclass Game {\n  constructor() {\n    this.board = new Board();\n    this.score = 0;\n    this.pause = false;\n\n    let grid = document.getElementById(\"game-grid\");\n    while (grid.firstChild) {\n      document.getElementById(\"game-grid\").removeChild(grid.firstChild);\n    }\n    document.getElementById(\"game-grid\").appendChild(this.board.drawGrid(8,8));\n\n    let score = document.getElementById('score');\n    score.innerHTML = this.score;\n\n  }\n\n  startGame() {\n    new Game();\n    let grid = document.getElementById(\"game-grid\");\n\n    clearInterval(this.timer);\n\n    this.time = 30;\n    this.score = 0;\n    let score = document.getElementById('score');\n    score.innerHTML = this.score;\n\n    this.startTimer();\n\n    this.interval = setInterval(() => {this.oneRound(grid.firstChild);}, 100);\n  }\n\n  countdown() {\n    let grid = document.getElementById(\"game-grid\");\n    while (grid.firstChild) {\n      document.getElementById(\"game-grid\").removeChild(grid.firstChild);\n    }\n\n  }\n\n  oneRound(grid) {\n    let uniqMatchedPos = this.board.checkForMatches(grid);\n      this.board.removeFruitAtMatchedPos(uniqMatchedPos, grid);\n      if (uniqMatchedPos.length > 0) {\n        setTimeout(() => {\n          let score = document.getElementById('score');\n          this.score += uniqMatchedPos.length * 100;\n          score.innerHTML = this.score;\n          this.board.shiftFruitDown(grid);\n        }, 500);\n      }\n  }\n\n  decreaseSeconds() {\n    this.time -= 1;\n    document.getElementById('timer').innerHTML = this.time;\n    if (this.time <= 0) {\n      clearInterval(this.timer);\n      this.endGame();\n    }\n  }\n\n  startTimer() {\n    document.getElementById('timer').innerHTML = this.time;\n    this.timer = setInterval(this.decreaseSeconds.bind(this), 1000);\n  }\n\n  pauseGame() {\n    this.pause = !this.pause;\n    if (this.pause) {\n      clearInterval(this.timer);\n    } else {\n      this.startTimer();\n    }\n  }\n\n  endGame() {\n    clearInterval(this.interval);\n    const grid = document.getElementById('game-grid');\n    while (grid.firstChild) {\n      document.getElementById(\"game-grid\").removeChild(grid.firstChild);\n    }\n\n    const timeUp = document.createElement('div');\n    timeUp.setAttribute(\"id\", 'time-up');\n    const top = timeUp.appendChild(document.createElement('div'));\n    top.setAttribute(\"id\", 'time-up-top');\n    const bottom = timeUp.appendChild(document.createElement('div'));\n    bottom.setAttribute(\"id\", 'time-up-bottom');\n\n\n    document.getElementById(\"game-grid\").appendChild(timeUp);\n    document.getElementById('time-up-top').innerHTML = \"Time's up!\";\n    setTimeout(() => {\n\n      document.getElementById('time-up-bottom').innerHTML += `You scored ${this.score} points!`;\n    }, 1000);\n\n  }\n\n}\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","\nclass Board {\n  constructor() {\n    this.fruitImages = [\n      \"./lib/images/apple.png\",\n      \"./lib/images/blueberry.png\",\n      \"./lib/images/grapes.png\",\n      \"./lib/images/kiwi.png\",\n      \"./lib/images/lemon.png\",\n      \"./lib/images/orange.png\",\n      \"./lib/images/watermelon.png\",\n    ];\n\n    this.fruits = [\n      'apple',\n      'blueberry',\n      'grapes',\n      'kiwi',\n      'lemon',\n      'orange',\n      'watermelon'\n    ];\n  }\n\n  drawGrid(rows, cols) {\n    let count = 0;\n    let grid = document.createElement('div');\n    grid.className = 'grid';\n    for (let i = 0; i < cols; i++){\n      let col = grid.appendChild(document.createElement('div'));\n      for (let j = 0; j < rows; j++){\n        let cell = col.appendChild(document.createElement(`div`));\n        let fruit = cell.appendChild(document.createElement(`img`));\n\n        // fruit.innerHTML = {type: ++count};\n        const img = this.fruitImages[Math.floor(Math.random() * this.fruitImages.length)];\n        const obj = img.substr(13).replace('.png','');\n        fruit.setAttribute(\"src\", img);\n\n        fruit.setAttribute(\"id\", `fruit${j}${i}`);\n        fruit.setAttribute(\"draggable\", 'true');\n        fruit.setAttribute(\"ondragstart\", \"drag(event)\");\n        fruit.className = `fruit-item ${obj}`;\n\n        cell.setAttribute(\"id\", `cell${j}${i}`);\n        cell.setAttribute(\"ondrop\", \"drop(event)\");\n        cell.setAttribute(\"ondragover\", \"allowDrop(event)\");\n        cell.className = `${j}${i}`;\n      }\n    }\n\n    this.oneRound(grid);\n\n    return grid;\n  }\n\n  oneRound(grid) {\n    let uniqMatchedPos = this.checkForMatches(grid);\n    while (uniqMatchedPos.length > 0) {\n      grid = this.removeFruitAtMatchedPos(uniqMatchedPos, grid);\n\n      grid = this.shiftFruitDown(grid);\n      uniqMatchedPos = this.checkForMatches(grid);\n    }\n  }\n\n  checkForMatches(grid) {\n    let allMatchedPos = [];\n    this.fruits.forEach(fruit => {\n      const allOneFruit = grid.getElementsByClassName(fruit);\n      const fruitPos = [];\n\n      for (let i = 0; i < allOneFruit.length; i++) {\n        fruitPos.push(parseInt(allOneFruit[i].parentNode.id.substr(4)));\n      }\n\n      this.checkHorizontalMatch(fruitPos).forEach(pos => {\n        allMatchedPos.push(pos);\n      });\n\n      this.checkVerticalMatch(fruitPos).forEach(pos => {\n        allMatchedPos.push(pos);\n      });\n    });\n\n    let uniqMatchedPos = [];\n\n    for (let i = 0; i < allMatchedPos.length; i++) {\n      if (uniqMatchedPos.indexOf(allMatchedPos[i]) === -1) {\n        uniqMatchedPos.push(allMatchedPos[i]);\n      }\n    }\n    return uniqMatchedPos;\n  }\n\n  checkHorizontalMatch(fruitPos) {\n    fruitPos.sort((a,b) => {return a-b;});\n    const matchedPos = [];\n    let maybeMatchedPos = [];\n    for (let i = 0; i < fruitPos.length; i++) {\n      if (maybeMatchedPos.length === 0) {\n        maybeMatchedPos.push(fruitPos[i]);\n      }\n\n      if (fruitPos[i] + 1 === fruitPos[i + 1]) {\n        maybeMatchedPos.push(fruitPos[i + 1]);\n      } else {\n        if (maybeMatchedPos.length >= 3) {\n          maybeMatchedPos.forEach(pos => {\n            matchedPos.push(pos);\n          });\n        }\n        maybeMatchedPos = [];\n      }\n    }\n    return matchedPos;\n  }\n\n  checkVerticalMatch(fruitPos) {\n    const matchedPos = [];\n    for (let i = 0; i < 10; i++) {\n      let modArray = [];\n\n      for (let j = 0; j < fruitPos.length; j++) {\n        if (fruitPos[j]%10 === i) {\n          modArray.push(fruitPos[j]);\n        }\n      }\n\n      let maybeMatchedPos = [];\n      for (let k = 0; k < modArray.length - 1; k++) {\n        if (maybeMatchedPos.length === 0) {\n          maybeMatchedPos.push(modArray[k]);\n        }\n        if (modArray[k] + 10 === modArray[k + 1]) {\n          maybeMatchedPos.push(modArray[k + 1]);\n          if ((k === modArray.length - 2) && (maybeMatchedPos.length >= 3)) {\n            maybeMatchedPos.forEach(pos => {\n              matchedPos.push(pos);\n            });\n            maybeMatchedPos = [];\n          }\n        } else {\n          if (maybeMatchedPos.length >= 3) {\n            maybeMatchedPos.forEach(pos => {\n              matchedPos.push(pos);\n            });\n          }\n          maybeMatchedPos = [];\n        }\n      }\n    }\n    return matchedPos;\n  }\n\n  removeFruitAtMatchedPos(uniqMatchedPos, grid) {\n    for (let i = 0; i < uniqMatchedPos.length; i++) {\n      let posString = \"\";\n      if (uniqMatchedPos[i].toString().length === 1) {\n        posString = `0${uniqMatchedPos[i]}`;\n      } else {\n        posString = uniqMatchedPos[i].toString();\n      }\n      \n      grid.getElementsByClassName(posString)[0].firstChild.src = \"\";\n      this.fruits.forEach(fruit => {\n        grid.getElementsByClassName(posString)[0].firstChild.classList.remove(fruit);\n      });\n    }\n    return grid;\n  }\n\n  shiftFruitDown(grid) {\n    let allFruit = grid.getElementsByClassName('fruit-item');\n    for (let j = 0; j < 8; j++) {\n      for (let i = 0; i < allFruit.length; i++) {\n        if (allFruit[i].src === \"file:///Users/jeffreyfan/Documents/App_Academy/Fruitswap/index.html\") {\n          this.fruits.forEach(fruit => {\n            allFruit[i].classList.remove(fruit);\n          });\n\n          if (i % 8 === 0) {\n            // generate random fruit\n            const img = this.fruitImages[Math.floor(Math.random() * this.fruitImages.length)];\n            const obj = img.substr(13).replace('.png','');\n            allFruit[i].src = img;\n            allFruit[i].classList.add(obj);\n          } else {\n            const prevImg = allFruit[i - 1].src;\n            const prevFruit = prevImg.substr(68).replace('.png','');\n            allFruit[i].src = prevImg;\n            allFruit[i].classList.add(prevFruit);\n            allFruit[i - 1].src = \"\";\n          }\n\n        }\n      }\n    }\n    return grid;\n  }\n}\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 2\n// module chunks = 0","const allowDrop = (ev) => {\n    ev.preventDefault();\n};\n\nconst drag = (ev) => {\n    ev.dataTransfer.setData(\"target\", ev.target.id);\n};\n\nconst drop = (ev) => {\n    ev.preventDefault();\n    var src = document.getElementById(ev.dataTransfer.getData(\"target\"));\n    var srcParent = src.parentNode;\n    var tgt = ev.currentTarget.firstElementChild;\n\n    ev.currentTarget.replaceChild(src, tgt);\n    srcParent.appendChild(tgt);\n};\n\nwindow.allowDrop = allowDrop;\nwindow.drag = drag;\nwindow.drop = drop;\n\nmodule.exports = allowDrop;\nmodule.exports = drag;\nmodule.exports = drop;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/swap_logic.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}